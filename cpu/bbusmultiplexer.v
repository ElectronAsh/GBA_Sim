//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// Tue Jul 30 2019 21:10:05
//
//      Input file      : 
//      Component name  : bbusmultiplexer
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------

//**************************************************************************************************** 
// B bus multiplexer for ARM7TDMI-S processor 
// Designed by Ruslan Lepetenok 
// Modified 04.12.2002 
//**************************************************************************************************** 

module bbusmultiplexer(
   RegFileBOut,
   MultiplierBOut,
   MemDataRegOut,
   AdrGenDataOut,
   SExtOffset24Bit,
   Offset12Bit,
   Offset8Bit,
   Immediate8Bit,
   RegFileBOutSel,
   MultiplierBOutSel,
   MemDataRegOutSel,
   SExtOffset24BitSel,
   Offset12BitSel,
   Offset8BitSel,
   Immediate8BitSel,
   AdrGenDataSel,
   BBusOut
);
   // Data input 
   input [31:0]  RegFileBOut;
   input [31:0]  MultiplierBOut;
   input [31:0]  MemDataRegOut;
   input [31:0]  AdrGenDataOut;
   // Immediate fields 
   input [31:0]  SExtOffset24Bit;
   input [31:0]  Offset12Bit;
   input [31:0]  Offset8Bit;
   input [31:0]  Immediate8Bit;
   // Control 
   input         RegFileBOutSel;		// Output of the register file 
   input         MultiplierBOutSel;		// Output of the multiplier 
   input         MemDataRegOutSel;		// Output of the data in register 
   input         SExtOffset24BitSel;
   input         Offset12BitSel;
   input         Offset8BitSel;
   input         Immediate8BitSel;
   input         AdrGenDataSel;
   // Data output 
   output [31:0] BBusOut;		// Connected to the input of the shifter 
   
   
   generate
      begin : xhdl0
         genvar        i;
         for (i = 31; i >= 0; i = i - 1)
         begin : BBusMux
            assign BBusOut[i] = (RegFileBOut[i] & RegFileBOutSel) | (MultiplierBOut[i] & MultiplierBOutSel) | (MemDataRegOut[i] & MemDataRegOutSel) | (SExtOffset24Bit[i] & SExtOffset24BitSel) | (Offset12Bit[i] & Offset12BitSel) | (Offset8Bit[i] & Offset8BitSel) | (Immediate8Bit[i] & Immediate8BitSel) | (AdrGenDataOut[i] & AdrGenDataSel);
         end
      end
   endgenerate
   
endmodule
